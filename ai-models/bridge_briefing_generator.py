import json
import random
from datetime import datetime

def generate_pre_call_briefing(aura_analysis_results, caregiver_notes=None, senior_name="Your loved one"):
    briefing = []
    briefing.append(f"## Pre-Call Briefing for {senior_name} - {datetime.now().strftime('%Y-%m-%d %H:%M')}\n")
    briefing.append("Here's a quick update to help you connect with them before your call:\n")

    # Incorporate insights from Aura™ analysis
    motion_deviation = aura_analysis_results.get("motion_deviation", {})
    sleep_deviation = aura_analysis_results.get("sleep_deviation", {})
    call_frequency_deviation = aura_analysis_results.get("call_frequency_deviation", {})

    if motion_deviation.get("detected"):
        if motion_deviation["current"] > motion_deviation["baseline"]:
            briefing.append(f"*   **Activity:** They've been more active than usual recently! Perhaps ask them about any new activities or walks they've enjoyed.\n")
        else:
            briefing.append(f"*   **Activity:** We noticed a slight dip in their activity levels. A gentle check-in about how they're feeling might be good.\n")
    else:
        briefing.append(f"*   **Activity:** Their activity levels have been consistent with their usual routine.\n")

    if sleep_deviation.get("detected"):
        if sleep_deviation["current"] < sleep_deviation["baseline"]:
            briefing.append(f"*   **Sleep:** They've had a bit less sleep than usual. You could ask if they've been resting well.\n")
        else:
            briefing.append(f"*   **Sleep:** They've been getting a bit more sleep than usual. Maybe they're catching up on rest!\n")
    else:
        briefing.append(f"*   **Sleep:** Their sleep patterns have been stable.\n")

    if call_frequency_deviation.get("detected"):
        if call_frequency_deviation["current"] < call_frequency_deviation["baseline"]:
            briefing.append(f"*   **Social:** Call frequency was a bit lower. A warm conversation from you would be especially welcome.\n")
        else:
            briefing.append(f"*   **Social:** They've been quite social with calls this week!\n")
    else:
        briefing.append(f"*   **Social:** Their communication patterns are consistent.\n")

    # Incorporate caregiver notes (simulated)
    if caregiver_notes:
        briefing.append("\n## From Caregiver Notes:\n")
        for note in caregiver_notes:
            briefing.append(f"*   {note}\n")

    briefing.append("\n## Conversation Starters:\n")
    conversation_starters = [
        "How are you feeling today?",
        "What was the most interesting part of your day/week?",
        "Did you try anything new recently?",
        "Is there anything you'd like to talk about?"
    ]
    briefing.append(f"*   {random.choice(conversation_starters)}\n")

    briefing.append("\n---\n")
    briefing.append("*This briefing is generated by the Bridge™ AI system to help you connect meaningfully.*" )

    return "".join(briefing)

if __name__ == "__main__":
    # Example usage with simulated data
    from aura_data_ingestion import simulate_data_ingestion
    from aura_analysis import analyze_aura_data

    simulated_aura_data = simulate_data_ingestion()
    aura_analysis_results = analyze_aura_data(simulated_aura_data)

    simulated_caregiver_notes = [
        "Enjoyed a long chat with Mrs. Sharma this afternoon.",
        "Finished reading the new book you sent.",
        "Had a good appetite today, enjoyed the mangoes."
    ]

    briefing = generate_pre_call_briefing(aura_analysis_results, simulated_caregiver_notes)
    print(briefing)
